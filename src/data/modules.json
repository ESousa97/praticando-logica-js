[
  {
    "id": "variables",
    "title": "Vari√°veis e Tipos",
    "icon": "üî¢",
    "description": "Aprenda sobre vari√°veis, n√∫meros e strings",
    "difficulty": "beginner",
    "estimatedTime": "30 min",
    "lessons": [
      {
        "id": "numeric-variables",
        "title": "Vari√°veis Num√©ricas",
        "subtitle": "Aprenda a trabalhar com n√∫meros em JavaScript",
        "theory": "As vari√°veis num√©ricas s√£o fundamentais na programa√ß√£o. Em JavaScript, voc√™ pode armazenar n√∫meros inteiros e decimais em vari√°veis usando <code>let</code>, <code>const</code> ou <code>var</code>.",
        "codeExample": "// Declarando vari√°veis num√©ricas\nlet numero1 = 10;\nlet numero2 = 20;\nlet soma = numero1 + numero2;\n\nconsole.log('A soma √©:', soma);",
        "exercise": {
          "type": "code",
          "question": "Crie duas vari√°veis num√©ricas e calcule sua multiplica√ß√£o:",
          "placeholder": "// Escreva seu c√≥digo aqui\nlet a = ;\nlet b = ;\nlet resultado = ;",
          "answer": ["a", "b", "*", "resultado"],
          "hint": "Use o operador * para multiplica√ß√£o"
        },
        "demo": "VariableDemo"
      },
      {
        "id": "string-manipulation",
        "title": "Manipula√ß√£o de Strings",
        "subtitle": "Trabalhe com texto em JavaScript",
        "theory": "Strings s√£o sequ√™ncias de caracteres. Voc√™ pode concaten√°-las, dividi-las e manipul√°-las de v√°rias formas.",
        "codeExample": "let nome = 'Jo√£o';\nlet sobrenome = 'Silva';\nlet nomeCompleto = nome + ' ' + sobrenome;\n\nconsole.log(nomeCompleto);",
        "exercise": {
          "type": "text",
          "question": "Se temos uma string 'JavaScript' e usamos o m√©todo split(','), qual seria o resultado com 'Java,Script'?",
          "answer": "['Java', 'Script']",
          "hint": "O split divide a string onde encontra a v√≠rgula"
        }
      }
    ]
  },
  {
    "id": "conditionals",
    "title": "Estruturas Condicionais",
    "icon": "ü§î",
    "description": "Aprenda a tomar decis√µes no c√≥digo com if, else e switch",
    "difficulty": "beginner",
    "estimatedTime": "45 min",
    "lessons": [
      {
        "id": "if-else",
        "title": "If e Else",
        "subtitle": "Tomando decis√µes no c√≥digo",
        "theory": "As estruturas condicionais permitem que seu c√≥digo tome decis√µes baseadas em condi√ß√µes. O <code>if</code> executa c√≥digo quando uma condi√ß√£o √© verdadeira.",
        "codeExample": "let idade = 18;\n\nif (idade >= 18) {\n    console.log('Voc√™ √© maior de idade');\n} else {\n    console.log('Voc√™ √© menor de idade');\n}",
        "exercise": {
          "type": "number",
          "question": "Digite um n√∫mero. Se for par, responda 'par', se for √≠mpar, responda '√≠mpar':",
          "placeholder": "Digite um n√∫mero",
          "hint": "Use o operador % (m√≥dulo) para verificar se √© par ou √≠mpar"
        },
        "demo": "ConditionalDemo"
      }
    ]
  },
  {
    "id": "functions",
    "title": "Fun√ß√µes",
    "icon": "‚öôÔ∏è",
    "description": "Crie blocos de c√≥digo reutiliz√°veis",
    "difficulty": "intermediate",
    "estimatedTime": "60 min",
    "lessons": [
      {
        "id": "basic-functions",
        "title": "Fun√ß√µes B√°sicas",
        "subtitle": "Criando e usando fun√ß√µes",
        "theory": "Fun√ß√µes s√£o blocos de c√≥digo que podem ser reutilizados. Elas podem receber par√¢metros e retornar valores.",
        "codeExample": "function somar(a, b) {\n    return a + b;\n}\n\nlet resultado = somar(5, 3);\nconsole.log(resultado); // 8",
        "exercise": {
          "type": "code",
          "question": "Crie uma fun√ß√£o que calcule a √°rea de um ret√¢ngulo:",
          "placeholder": "function calcularArea(largura, altura) {\n    // Seu c√≥digo aqui\n}",
          "answer": ["return", "largura", "*", "altura"],
          "hint": "A √°rea do ret√¢ngulo √© largura √ó altura"
        }
      }
    ]
  },
  {
    "id": "arrays",
    "title": "Arrays e Loops",
    "icon": "üìã",
    "description": "Trabalhe com listas e repeti√ß√µes",
    "difficulty": "intermediate",
    "estimatedTime": "50 min",
    "lessons": []
  },
  {
    "id": "objects",
    "title": "Objetos",
    "icon": "üéØ",
    "description": "Organize dados em estruturas complexas",
    "difficulty": "intermediate",
    "estimatedTime": "40 min",
    "lessons": []
  },
  {
    "id": "dom",
    "title": "Manipula√ß√£o do DOM",
    "icon": "üåê",
    "description": "Interaja com elementos da p√°gina web",
    "difficulty": "advanced",
    "estimatedTime": "70 min",
    "lessons": []
  }
]
